(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return r})),n.d(t,"default",(function(){return p}));var o=n(3),i=n(7),a=(n(0),n(88)),c={id:"logo-per-context",title:"Configure a Logo Based on App Context",sidebar_label:"Logo Based on App Context",slug:"/logo-per-app-context"},s={unversionedId:"sign-in/logo-per-context",id:"sign-in/logo-per-context",isDocsHomePage:!1,title:"Configure a Logo Based on App Context",description:"Problem",source:"@site/docs/sign-in/logo-per-context.md",slug:"/logo-per-app-context",permalink:"/docs/logo-per-app-context",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/sign-in/logo-per-context.md",version:"current",sidebar_label:"Logo Based on App Context",sidebar:"docs",previous:{title:"reCAPTCHA v3",permalink:"/docs/repcaptcha-v3"}},r=[{value:"Problem",id:"problem",children:[]},{value:"Solution",id:"solution",children:[]},{value:"Discussion",id:"discussion",children:[]}],l={toc:r};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"problem"},"Problem"),Object(a.b)("p",null,"For multi-brand companies trying to consolidate their brands through a white label application, you may want to dynamically change the logo per application or context id."),Object(a.b)("h2",{id:"solution"},"Solution"),Object(a.b)("p",null,"The Okta-hosted sign-in page is ",Object(a.b)("a",{parentName:"p",href:"https://developer.okta.com/docs/guides/style-the-widget/customization-examples/#per-application-customization"},"application-aware")," as stated in the developer docs. Simply leverage the ",Object(a.b)("inlineCode",{parentName:"p"},"OktaUtils")," to pull the context and apply simple logic to configure a logo per client id."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"// Helper function described in developer docs\nconst getClientId = () => {\n    if (!OktaUtil) return;\n\n    const requestContext = OktaUtil.getRequestContext();\n    if (requestContext && requestContext.target && requestContext.target.clientId) {\n        return requestContext.target.clientId;\n    }\n}\n\nconst clientId = getClientId();\nconst config = OktaUtil.getSignInWidgetConfig();\n\n// Dynamic Map or you can use a switch statement\nconst LOGO_IMG_URL = {\n    CLIENT_ID_1: URL_1,\n    CLIENT_ID_2: URL_2,\n    CLIENT_ID_3: URL_3,\n    CLIENT_ID_4: URL_4\n}[clientId];\n\nconfig.logo = LOGO_IMG_URL;\n")),Object(a.b)("h2",{id:"discussion"},"Discussion"),Object(a.b)("p",null,"This can easily be extended based on domain url as well."))}p.isMDXComponent=!0}}]);